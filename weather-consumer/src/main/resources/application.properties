spring.application.name=weather-consumer

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.client-id=${spring.application.name}

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:weather-analytics}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=org.danila.weather.WeatherRecord
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.listener.concurrency=2
spring.kafka.listener.ack-mode=record

weather.topic=${WEATHER_TOPIC:weather}
weather.summary-interval-ms=${WEATHER_SUMMARY_INTERVAL_MS:30000}

logging.level.root=info
logging.level.org.apache.kafka=warn
logging.level.org.danila=debug